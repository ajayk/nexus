<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.sonatype.nexus.plugins</groupId>
    <artifactId>nexus-core-plugins</artifactId>
    <version>1.5.1-SNAPSHOT</version>
  </parent>

  <artifactId>nexus-maven-plugin</artifactId>

  <packaging>nexus-plugin</packaging>

  <name>Nexus Maven Plugin</name>
  <description>A Nexus Maven Plugin embeds Maven3 into Nexus and provides some extra features. This is a headless plugin, it just adds new component that uses Maven3 under the hood.</description>

  <properties>
    <maven.version>3.0-alpha-7</maven.version>
  </properties>

  <dependencies>

    <!-- We have components in here -->
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-component-annotations</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-container-default</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-classworlds</artifactId>
      <scope>provided</scope>
    </dependency>
    <!-- Needed to be able to read up Poms -->
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-embedder</artifactId>
      <version>${maven.version}</version>
    </dependency>
    <!--  The one from Maven 3.x -->
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-provider-api</artifactId>
      <version>1.0-beta-6</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.sonatype.nexus</groupId>
      <artifactId>nexus-plugin-api</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.sonatype.nexus</groupId>
      <artifactId>nexus-app</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-artifact-manager</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.sonatype.nexus</groupId>
      <artifactId>nexus-rest-api</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-artifact-manager</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Basic testing -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.4</version>
      <scope>test</scope>
    </dependency>
    <!-- Brings in too many incompatible deps -->
    <!--
      dependency> <groupId>org.sonatype.nexus</groupId>
      <artifactId>nexus-plugin-test-api</artifactId>
      <version>${project.version}</version> <scope>test</scope>
      </dependency
    -->

  </dependencies>

  <build>
    <plugins>

      <!-- Needed for custom packaging -->
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>app-lifecycle-maven-plugin</artifactId>
        <version>1.0</version>
        <extensions>true</extensions>
        <dependencies>
          <dependency>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>app-lifecycle-nexus</artifactId>
            <version>1.0</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <groupId>org.codehaus.plexus</groupId>
        <artifactId>plexus-component-metadata</artifactId>
        <executions>
          <execution>
            <id>process-classes</id>
            <goals>
              <goal>generate-metadata</goal>
            </goals>
          </execution>
          <execution>
            <id>process-test-classes</id>
            <goals>
              <goal>generate-test-metadata</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

</project>
