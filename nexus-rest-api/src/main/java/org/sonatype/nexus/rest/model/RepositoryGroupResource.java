/*
 =================== DO NOT EDIT THIS FILE ====================
 Generated by Modello 1.0.2 on 2010-01-11 12:09:20,
 any modifications will be overwritten.
 ==============================================================
 */

package org.sonatype.nexus.rest.model;

/**
 * Class RepositoryGroupResource.
 * 
 * @version $Revision$ $Date$
 */
public class RepositoryGroupResource
    extends RepositoryBaseResource
    implements java.io.Serializable
{

      //--------------------------/
     //- Class/Member Variables -/
    //--------------------------/

    /**
     * Field repositories.
     */
    private java.util.List<RepositoryGroupMemberRepository> repositories;


      //-----------/
     //- Methods -/
    //-----------/

    /**
     * Method addRepository.
     * 
     * @param repositoryGroupMemberRepository
     */
    public void addRepository( RepositoryGroupMemberRepository repositoryGroupMemberRepository )
    {
        if ( !(repositoryGroupMemberRepository instanceof RepositoryGroupMemberRepository) )
        {
            throw new ClassCastException( "RepositoryGroupResource.addRepositories(repositoryGroupMemberRepository) parameter must be instanceof " + RepositoryGroupMemberRepository.class.getName() );
        }
        getRepositories().add( repositoryGroupMemberRepository );
    } //-- void addRepository( RepositoryGroupMemberRepository )

    /**
     * Method getRepositories.
     * 
     * @return List
     */
    public java.util.List<RepositoryGroupMemberRepository> getRepositories()
    {
        if ( this.repositories == null )
        {
            this.repositories = new java.util.ArrayList<RepositoryGroupMemberRepository>();
        }

        return this.repositories;
    } //-- java.util.List<RepositoryGroupMemberRepository> getRepositories()

    /**
     * Method removeRepository.
     * 
     * @param repositoryGroupMemberRepository
     */
    public void removeRepository( RepositoryGroupMemberRepository repositoryGroupMemberRepository )
    {
        if ( !(repositoryGroupMemberRepository instanceof RepositoryGroupMemberRepository) )
        {
            throw new ClassCastException( "RepositoryGroupResource.removeRepositories(repositoryGroupMemberRepository) parameter must be instanceof " + RepositoryGroupMemberRepository.class.getName() );
        }
        getRepositories().remove( repositoryGroupMemberRepository );
    } //-- void removeRepository( RepositoryGroupMemberRepository )

    /**
     * Set the repositories field.
     * 
     * @param repositories
     */
    public void setRepositories( java.util.List<RepositoryGroupMemberRepository> repositories )
    {
        this.repositories = repositories;
    } //-- void setRepositories( java.util.List )


}
