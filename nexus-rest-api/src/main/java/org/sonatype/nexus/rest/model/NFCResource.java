/*
 =================== DO NOT EDIT THIS FILE ====================
 Generated by Modello 1.0.2 on 2010-01-11 12:09:20,
 any modifications will be overwritten.
 ==============================================================
 */

package org.sonatype.nexus.rest.model;

/**
 * Class NFCResource.
 * 
 * @version $Revision$ $Date$
 */
public class NFCResource
    implements java.io.Serializable
{

      //--------------------------/
     //- Class/Member Variables -/
    //--------------------------/

    /**
     * Field nfcContents.
     */
    private java.util.List<NFCRepositoryResource> nfcContents;


      //-----------/
     //- Methods -/
    //-----------/

    /**
     * Method addNfcContent.
     * 
     * @param nFCRepositoryResource
     */
    public void addNfcContent( NFCRepositoryResource nFCRepositoryResource )
    {
        if ( !(nFCRepositoryResource instanceof NFCRepositoryResource) )
        {
            throw new ClassCastException( "NFCResource.addNfcContents(nFCRepositoryResource) parameter must be instanceof " + NFCRepositoryResource.class.getName() );
        }
        getNfcContents().add( nFCRepositoryResource );
    } //-- void addNfcContent( NFCRepositoryResource )

    /**
     * Method getNfcContents.
     * 
     * @return List
     */
    public java.util.List<NFCRepositoryResource> getNfcContents()
    {
        if ( this.nfcContents == null )
        {
            this.nfcContents = new java.util.ArrayList<NFCRepositoryResource>();
        }

        return this.nfcContents;
    } //-- java.util.List<NFCRepositoryResource> getNfcContents()

    /**
     * Method removeNfcContent.
     * 
     * @param nFCRepositoryResource
     */
    public void removeNfcContent( NFCRepositoryResource nFCRepositoryResource )
    {
        if ( !(nFCRepositoryResource instanceof NFCRepositoryResource) )
        {
            throw new ClassCastException( "NFCResource.removeNfcContents(nFCRepositoryResource) parameter must be instanceof " + NFCRepositoryResource.class.getName() );
        }
        getNfcContents().remove( nFCRepositoryResource );
    } //-- void removeNfcContent( NFCRepositoryResource )

    /**
     * Set the nfcContents field.
     * 
     * @param nfcContents
     */
    public void setNfcContents( java.util.List<NFCRepositoryResource> nfcContents )
    {
        this.nfcContents = nfcContents;
    } //-- void setNfcContents( java.util.List )


}
