/*
 =================== DO NOT EDIT THIS FILE ====================
 Generated by Modello 1.0.2 on 2010-01-11 12:09:20,
 any modifications will be overwritten.
 ==============================================================
 */

package org.sonatype.nexus.rest.model;

/**
 * Class ContentListDescribeResponseResource.
 * 
 * @version $Revision$ $Date$
 */
public class ContentListDescribeResponseResource
    implements java.io.Serializable
{

      //--------------------------/
     //- Class/Member Variables -/
    //--------------------------/

    /**
     * Field responseType.
     */
    private String responseType;

    /**
     * Field responseActualClass.
     */
    private String responseActualClass;

    /**
     * Field responsePath.
     */
    private String responsePath;

    /**
     * Field responseUid.
     */
    private String responseUid;

    /**
     * Field originatingRepositoryId.
     */
    private String originatingRepositoryId;

    /**
     * Field originatingRepositoryName.
     */
    private String originatingRepositoryName;

    /**
     * Field originatingRepositoryMainFacet.
     */
    private String originatingRepositoryMainFacet;

    /**
     * Field processedRepositoriesList.
     */
    private java.util.List<String> processedRepositoriesList;

    /**
     * Field appliedMappings.
     */
    private java.util.List<String> appliedMappings;

    /**
     * Field properties.
     */
    private java.util.List<String> properties;

    /**
     * Field attributes.
     */
    private java.util.List<String> attributes;

    /**
     * Field sources.
     */
    private java.util.List<String> sources;


      //-----------/
     //- Methods -/
    //-----------/

    /**
     * Method addAppliedMapping.
     * 
     * @param string
     */
    public void addAppliedMapping( String string )
    {
        if ( !(string instanceof String) )
        {
            throw new ClassCastException( "ContentListDescribeResponseResource.addAppliedMappings(string) parameter must be instanceof " + String.class.getName() );
        }
        getAppliedMappings().add( string );
    } //-- void addAppliedMapping( String )

    /**
     * Method addAttribute.
     * 
     * @param string
     */
    public void addAttribute( String string )
    {
        if ( !(string instanceof String) )
        {
            throw new ClassCastException( "ContentListDescribeResponseResource.addAttributes(string) parameter must be instanceof " + String.class.getName() );
        }
        getAttributes().add( string );
    } //-- void addAttribute( String )

    /**
     * Method addProcessedRepositoriesList.
     * 
     * @param string
     */
    public void addProcessedRepositoriesList( String string )
    {
        if ( !(string instanceof String) )
        {
            throw new ClassCastException( "ContentListDescribeResponseResource.addProcessedRepositoriesList(string) parameter must be instanceof " + String.class.getName() );
        }
        getProcessedRepositoriesList().add( string );
    } //-- void addProcessedRepositoriesList( String )

    /**
     * Method addProperty.
     * 
     * @param string
     */
    public void addProperty( String string )
    {
        if ( !(string instanceof String) )
        {
            throw new ClassCastException( "ContentListDescribeResponseResource.addProperties(string) parameter must be instanceof " + String.class.getName() );
        }
        getProperties().add( string );
    } //-- void addProperty( String )

    /**
     * Method addSource.
     * 
     * @param string
     */
    public void addSource( String string )
    {
        if ( !(string instanceof String) )
        {
            throw new ClassCastException( "ContentListDescribeResponseResource.addSources(string) parameter must be instanceof " + String.class.getName() );
        }
        getSources().add( string );
    } //-- void addSource( String )

    /**
     * Method getAppliedMappings.
     * 
     * @return List
     */
    public java.util.List<String> getAppliedMappings()
    {
        if ( this.appliedMappings == null )
        {
            this.appliedMappings = new java.util.ArrayList<String>();
        }

        return this.appliedMappings;
    } //-- java.util.List<String> getAppliedMappings()

    /**
     * Method getAttributes.
     * 
     * @return List
     */
    public java.util.List<String> getAttributes()
    {
        if ( this.attributes == null )
        {
            this.attributes = new java.util.ArrayList<String>();
        }

        return this.attributes;
    } //-- java.util.List<String> getAttributes()

    /**
     * Get the originatingRepositoryId field.
     * 
     * @return String
     */
    public String getOriginatingRepositoryId()
    {
        return this.originatingRepositoryId;
    } //-- String getOriginatingRepositoryId()

    /**
     * Get the originatingRepositoryMainFacet field.
     * 
     * @return String
     */
    public String getOriginatingRepositoryMainFacet()
    {
        return this.originatingRepositoryMainFacet;
    } //-- String getOriginatingRepositoryMainFacet()

    /**
     * Get the originatingRepositoryName field.
     * 
     * @return String
     */
    public String getOriginatingRepositoryName()
    {
        return this.originatingRepositoryName;
    } //-- String getOriginatingRepositoryName()

    /**
     * Method getProcessedRepositoriesList.
     * 
     * @return List
     */
    public java.util.List<String> getProcessedRepositoriesList()
    {
        if ( this.processedRepositoriesList == null )
        {
            this.processedRepositoriesList = new java.util.ArrayList<String>();
        }

        return this.processedRepositoriesList;
    } //-- java.util.List<String> getProcessedRepositoriesList()

    /**
     * Method getProperties.
     * 
     * @return List
     */
    public java.util.List<String> getProperties()
    {
        if ( this.properties == null )
        {
            this.properties = new java.util.ArrayList<String>();
        }

        return this.properties;
    } //-- java.util.List<String> getProperties()

    /**
     * Get the responseActualClass field.
     * 
     * @return String
     */
    public String getResponseActualClass()
    {
        return this.responseActualClass;
    } //-- String getResponseActualClass()

    /**
     * Get the responsePath field.
     * 
     * @return String
     */
    public String getResponsePath()
    {
        return this.responsePath;
    } //-- String getResponsePath()

    /**
     * Get the responseType field.
     * 
     * @return String
     */
    public String getResponseType()
    {
        return this.responseType;
    } //-- String getResponseType()

    /**
     * Get the responseUid field.
     * 
     * @return String
     */
    public String getResponseUid()
    {
        return this.responseUid;
    } //-- String getResponseUid()

    /**
     * Method getSources.
     * 
     * @return List
     */
    public java.util.List<String> getSources()
    {
        if ( this.sources == null )
        {
            this.sources = new java.util.ArrayList<String>();
        }

        return this.sources;
    } //-- java.util.List<String> getSources()

    /**
     * Method removeAppliedMapping.
     * 
     * @param string
     */
    public void removeAppliedMapping( String string )
    {
        if ( !(string instanceof String) )
        {
            throw new ClassCastException( "ContentListDescribeResponseResource.removeAppliedMappings(string) parameter must be instanceof " + String.class.getName() );
        }
        getAppliedMappings().remove( string );
    } //-- void removeAppliedMapping( String )

    /**
     * Method removeAttribute.
     * 
     * @param string
     */
    public void removeAttribute( String string )
    {
        if ( !(string instanceof String) )
        {
            throw new ClassCastException( "ContentListDescribeResponseResource.removeAttributes(string) parameter must be instanceof " + String.class.getName() );
        }
        getAttributes().remove( string );
    } //-- void removeAttribute( String )

    /**
     * Method removeProcessedRepositoriesList.
     * 
     * @param string
     */
    public void removeProcessedRepositoriesList( String string )
    {
        if ( !(string instanceof String) )
        {
            throw new ClassCastException( "ContentListDescribeResponseResource.removeProcessedRepositoriesList(string) parameter must be instanceof " + String.class.getName() );
        }
        getProcessedRepositoriesList().remove( string );
    } //-- void removeProcessedRepositoriesList( String )

    /**
     * Method removeProperty.
     * 
     * @param string
     */
    public void removeProperty( String string )
    {
        if ( !(string instanceof String) )
        {
            throw new ClassCastException( "ContentListDescribeResponseResource.removeProperties(string) parameter must be instanceof " + String.class.getName() );
        }
        getProperties().remove( string );
    } //-- void removeProperty( String )

    /**
     * Method removeSource.
     * 
     * @param string
     */
    public void removeSource( String string )
    {
        if ( !(string instanceof String) )
        {
            throw new ClassCastException( "ContentListDescribeResponseResource.removeSources(string) parameter must be instanceof " + String.class.getName() );
        }
        getSources().remove( string );
    } //-- void removeSource( String )

    /**
     * Set the appliedMappings field.
     * 
     * @param appliedMappings
     */
    public void setAppliedMappings( java.util.List<String> appliedMappings )
    {
        this.appliedMappings = appliedMappings;
    } //-- void setAppliedMappings( java.util.List )

    /**
     * Set the attributes field.
     * 
     * @param attributes
     */
    public void setAttributes( java.util.List<String> attributes )
    {
        this.attributes = attributes;
    } //-- void setAttributes( java.util.List )

    /**
     * Set the originatingRepositoryId field.
     * 
     * @param originatingRepositoryId
     */
    public void setOriginatingRepositoryId( String originatingRepositoryId )
    {
        this.originatingRepositoryId = originatingRepositoryId;
    } //-- void setOriginatingRepositoryId( String )

    /**
     * Set the originatingRepositoryMainFacet field.
     * 
     * @param originatingRepositoryMainFacet
     */
    public void setOriginatingRepositoryMainFacet( String originatingRepositoryMainFacet )
    {
        this.originatingRepositoryMainFacet = originatingRepositoryMainFacet;
    } //-- void setOriginatingRepositoryMainFacet( String )

    /**
     * Set the originatingRepositoryName field.
     * 
     * @param originatingRepositoryName
     */
    public void setOriginatingRepositoryName( String originatingRepositoryName )
    {
        this.originatingRepositoryName = originatingRepositoryName;
    } //-- void setOriginatingRepositoryName( String )

    /**
     * Set the processedRepositoriesList field.
     * 
     * @param processedRepositoriesList
     */
    public void setProcessedRepositoriesList( java.util.List<String> processedRepositoriesList )
    {
        this.processedRepositoriesList = processedRepositoriesList;
    } //-- void setProcessedRepositoriesList( java.util.List )

    /**
     * Set the properties field.
     * 
     * @param properties
     */
    public void setProperties( java.util.List<String> properties )
    {
        this.properties = properties;
    } //-- void setProperties( java.util.List )

    /**
     * Set the responseActualClass field.
     * 
     * @param responseActualClass
     */
    public void setResponseActualClass( String responseActualClass )
    {
        this.responseActualClass = responseActualClass;
    } //-- void setResponseActualClass( String )

    /**
     * Set the responsePath field.
     * 
     * @param responsePath
     */
    public void setResponsePath( String responsePath )
    {
        this.responsePath = responsePath;
    } //-- void setResponsePath( String )

    /**
     * Set the responseType field.
     * 
     * @param responseType
     */
    public void setResponseType( String responseType )
    {
        this.responseType = responseType;
    } //-- void setResponseType( String )

    /**
     * Set the responseUid field.
     * 
     * @param responseUid
     */
    public void setResponseUid( String responseUid )
    {
        this.responseUid = responseUid;
    } //-- void setResponseUid( String )

    /**
     * Set the sources field.
     * 
     * @param sources
     */
    public void setSources( java.util.List<String> sources )
    {
        this.sources = sources;
    } //-- void setSources( java.util.List )


}
