/*
 =================== DO NOT EDIT THIS FILE ====================
 Generated by Modello 1.0.2 on 2010-01-11 12:09:20,
 any modifications will be overwritten.
 ==============================================================
 */

package org.sonatype.nexus.rest.model;

/**
 * Class RepositoryTargetResource.
 * 
 * @version $Revision$ $Date$
 */
public class RepositoryTargetResource
    implements java.io.Serializable
{

      //--------------------------/
     //- Class/Member Variables -/
    //--------------------------/

    /**
     * Field resourceURI.
     */
    private String resourceURI;

    /**
     * Field id.
     */
    private String id;

    /**
     * Field name.
     */
    private String name;

    /**
     * Field contentClass.
     */
    private String contentClass;

    /**
     * Field patterns.
     */
    private java.util.List<String> patterns;


      //-----------/
     //- Methods -/
    //-----------/

    /**
     * Method addPattern.
     * 
     * @param string
     */
    public void addPattern( String string )
    {
        if ( !(string instanceof String) )
        {
            throw new ClassCastException( "RepositoryTargetResource.addPatterns(string) parameter must be instanceof " + String.class.getName() );
        }
        getPatterns().add( string );
    } //-- void addPattern( String )

    /**
     * Get the contentClass field.
     * 
     * @return String
     */
    public String getContentClass()
    {
        return this.contentClass;
    } //-- String getContentClass()

    /**
     * Get the id field.
     * 
     * @return String
     */
    public String getId()
    {
        return this.id;
    } //-- String getId()

    /**
     * Get the name field.
     * 
     * @return String
     */
    public String getName()
    {
        return this.name;
    } //-- String getName()

    /**
     * Method getPatterns.
     * 
     * @return List
     */
    public java.util.List<String> getPatterns()
    {
        if ( this.patterns == null )
        {
            this.patterns = new java.util.ArrayList<String>();
        }

        return this.patterns;
    } //-- java.util.List<String> getPatterns()

    /**
     * Get the resourceURI field.
     * 
     * @return String
     */
    public String getResourceURI()
    {
        return this.resourceURI;
    } //-- String getResourceURI()

    /**
     * Method removePattern.
     * 
     * @param string
     */
    public void removePattern( String string )
    {
        if ( !(string instanceof String) )
        {
            throw new ClassCastException( "RepositoryTargetResource.removePatterns(string) parameter must be instanceof " + String.class.getName() );
        }
        getPatterns().remove( string );
    } //-- void removePattern( String )

    /**
     * Set the contentClass field.
     * 
     * @param contentClass
     */
    public void setContentClass( String contentClass )
    {
        this.contentClass = contentClass;
    } //-- void setContentClass( String )

    /**
     * Set the id field.
     * 
     * @param id
     */
    public void setId( String id )
    {
        this.id = id;
    } //-- void setId( String )

    /**
     * Set the name field.
     * 
     * @param name
     */
    public void setName( String name )
    {
        this.name = name;
    } //-- void setName( String )

    /**
     * Set the patterns field.
     * 
     * @param patterns
     */
    public void setPatterns( java.util.List<String> patterns )
    {
        this.patterns = patterns;
    } //-- void setPatterns( java.util.List )

    /**
     * Set the resourceURI field.
     * 
     * @param resourceURI
     */
    public void setResourceURI( String resourceURI )
    {
        this.resourceURI = resourceURI;
    } //-- void setResourceURI( String )


}
